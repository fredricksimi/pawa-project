# Environment variables that will be used when this cloudbuild config executes
substitutions:
 _GCP_REGION: "us-east1"
 _PROJECT_ID: "eternal-empire-465908-c3"
 _REPO_NAME: "my-repository"
 _DOCKER_IMAGE_NAME: "my-app"
 _TERRAFORM_GCP_BACKEND: "my-terraform-state-bucket-100825"

steps:
# Step 1: Install Python dependencies using the provided requirements.txt file
# Run our tests using the tests.py file provided using the unittest framework, if tests fail, the build processstops
- name: 'python:3.13'
  id: 'Install dependencies and run tests'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      pip install -r requirements.txt
      python -m unittest tests.py

# Building our Docker image
- name: 'gcr.io/cloud-builders/docker'
  id: 'Building our Docker image'
  args: ['build', '-t', '${_GCP_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/$_DOCKER_IMAGE_NAME', '.']

# Creating our Artifact registry repo on our GCP rpoject
- name: 'hashicorp/terraform:latest'
  id: 'Creating our repository to push our image'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      terraform init -backend-config="bucket=${_TERRAFORM_GCP_BACKEND}"

      terraform apply -auto-approve -target=google_artifact_registry_repository.my_repo \
        -var="gcp_project_id=${_PROJECT_ID}" \
        -var="gcp_region=${_GCP_REGION}" \
        -var="repo_name=${_REPO_NAME}"

# Pushing our Docker image to our repo
- name: 'gcr.io/cloud-builders/docker'
  id: 'Pushing our Docker image'
  args: ['push', '${_GCP_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/$_DOCKER_IMAGE_NAME']

# Fetch Service Account Key from Secret Manager
- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Fetch Service Account key'
  entrypoint: 'sh'
  args:
    - '-c'
    - 'gcloud secrets versions access latest --secret=terraform-service-account-key --out-file=key.json'

# Install Terraform, set credentials and run the commands. Store the Terraform state in the GCS backend
- name: 'hashicorp/terraform:latest'
  id: 'Run Terraform commands'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      export GOOGLE_APPLICATION_CREDENTIALS="./key.json"

      terraform init -backend-config="bucket=${_TERRAFORM_GCP_BACKEND}"

      # Plan and apply the changes.
      terraform plan -out=tfplan \
        -var="gcp_project_id=${_PROJECT_ID}" \
        -var="gcp_region=${_GCP_REGION}" \
        -var="repo_name=${_REPO_NAME}" \
        -var="terraform_state_bucket=${_TERRAFORM_GCP_BACKEND}" \
        -var="docker_image=${_GCP_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/$_DOCKER_IMAGE_NAME"

      terraform apply -auto-approve tfplan

# For build process to write logs in the regional bucket
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET